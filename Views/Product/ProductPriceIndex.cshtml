@using RX108_Data
@model PagingList<mst_productprice>
@{
    ViewData["Title"] = "Product Price List";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int? currentSort = ViewBag.CurrentSort == null ? 11 : Convert.ToInt32(ViewBag.CurrentSort);
    if (currentSort == null)
    {
        currentSort = 11;
    }
}

@if (TempData["msg"] != null)
{
    <div class="@TempData["Class"]">
        <button class="close" data-dismiss="alert">
            ×
        </button>
        @{ if (@TempData["Class"].ToString() == "alert alert-success")
            {
                <i class="fa-fw fa fa-check"></i>
                <strong>Success</strong>
            }
            else
            {
                <i class="fa-fw fa fa-times"></i>
                <strong>Error!</strong>
            }
        }
        @TempData["MSG"]
    </div>
}
<br />
<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="collapse navbar-collapse" id="navbarTogglerDemo01">
        <a class="navbar-brand" href="#">Product Price List</a>
    </div>
    <form class="form-inline my-2 my-lg-0 float-right">
        <a href="../Product/ProductPriceAdd" class="btn btn-outline-info pull-right">
            <i class="fa fa-plus-square"></i> &nbsp;
            Add New
        </a>
    </form>
</nav>
<br />
<div class="form-inline my-2 my-lg-0 float-right">
    @using (Html.BeginForm("ProductPriceIndex", "Product", FormMethod.Get))
    {
        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control search-text", @placeholder = "Search.." })
        <input class="btn btn-info" type="submit" value="Search" />
    }

</div>
<br />
<br />
<div class="table-responsive">

    <table class="table table-bordered table-hover">

        <tr>
            <th>#</th>
            <th>Product </th>
            <th>
                @{
                    if (currentSort == 11)
                    {
                        @Html.ActionLink("RevisedDate", "ProductPriceIndex", new
                        {
                            sortField = "12",
                            currentSortField = ViewBag.SortField,
                            currentSortOrder = ViewBag.SortOrder,
                            currentFilter = ViewBag.CurrentFilter
                        })
                    }
                    else
                    {
                        @Html.ActionLink("RevisedDate", "ProductPriceIndex", new
                        {
                            sortField = "11",
                            currentSortField = ViewBag.SortField,
                            currentSortOrder = ViewBag.SortOrder,
                             currentFilter = ViewBag.CurrentFilter
                        })
                    }
                    if (currentSort == 11)
                    {
                        <i class="fa fa-sort-up pull-right"></i>}
                    else if (currentSort == 12)
                    {
                        <i class="fa fa-sort-down pull-right"></i>}
                    else
                    {
                        <i class="fa fa-sort pull-right"></i>
                    }
                }
            </th>
            <th>
                @{
                    if (currentSort == 21)
                    {
                        @Html.ActionLink("ProductPrice", "ProductPriceIndex", new
                        {
                            sortField = "22",
                            currentSortField = ViewBag.SortField,
                            currentSortOrder = ViewBag.SortOrder,
                            currentFilter = ViewBag.CurrentFilter
                        })
                    }
                    else
                    {
                        @Html.ActionLink("ProductPrice", "ProductPriceIndex", new
                        {
                            sortField = "21",
                            currentSortField = ViewBag.SortField,
                            currentSortOrder = ViewBag.SortOrder,
                             currentFilter = ViewBag.CurrentFilter
                        })
                    }
                    if (currentSort == 21)
                    {
                        <i class="fa fa-sort-up pull-right"></i>}
                    else if (currentSort == 22)
                    {
                        <i class="fa fa-sort-down pull-right"></i>}
                    else
                    {
                        <i class="fa fa-sort pull-right"></i>
                    }
                }
            </th>
            <th>
                @{
                    if (currentSort == 31)
                    {
                        @Html.ActionLink("AMCPrice", "ProductPriceIndex", new
                        {
                            sortField = "32",
                            currentSortField = ViewBag.SortField,
                            currentSortOrder = ViewBag.SortOrder,
                            currentFilter = ViewBag.CurrentFilter
                        })
                    }
                    else
                    {
                        @Html.ActionLink("AMCPrice", "ProductPriceIndex", new
                        {
                            sortField = "31",
                            currentSortField = ViewBag.SortField,
                            currentSortOrder = ViewBag.SortOrder,
                             currentFilter = ViewBag.CurrentFilter
                        })
                    }
                    if (currentSort == 31)
                    {
                        <i class="fa fa-sort-up pull-right"></i>}
                    else if (currentSort == 32)
                    {
                        <i class="fa fa-sort-down pull-right"></i>}
                    else
                    {
                        <i class="fa fa-sort pull-right"></i>
                    }
                }
            </th>
            <th>Remark</th>
            <th>Actions</th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.DisID)</td>
                @{
                    mst_product mst_Product = new mst_product();
                    mst_Product = mst_product.GetByID(item.Mst_Product_SrNo);
                    <td>@mst_Product.ProductName</td>
                }

                <td>@item.RevisedDate.ToString("dd/MM/yyyy")</td>
                <td>@Html.DisplayFor(modelItem => item.ProductPrice)</td>
                <td>@Html.DisplayFor(modelItem => item.AMCPrice)</td>
                <td>@Html.DisplayFor(modelItem => item.Remark)</td>
                <td>
                    <a class="btn btn-primary" href="../Product/ProductPriceAdd?srno=@item.SrNo">
                        <i class="fa fa-edit"></i>
                    </a>
                    <a class="btn btn-danger" href="../Product/ProductPriceDelete?srno=@item.SrNo" onclick="return confirm('Are you sure want to delete this record?');">
                        <i class="fa fa-trash-alt"></i>
                    </a>
                </td>
            </tr>
        }

    </table>

    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        var totalPageNo = Model.TotalPageNo;
        var currentPageNo = Model.PageIndex;
    }
</div>
<br />
<div class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="col-md-6" style="padding:0">
        Total Records: <b>@Model.TotalRecords</b> |
        <span>
            Page No :<b>@currentPageNo</b> of <b>@totalPageNo</b>
        </span>
    </div>
    <div class="col-md-6" style="text-align:right;padding:0;">
        <a asp-action="ProductPriceIndex" asp-controller="Product"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNo="@(Model.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @prevDisabled">
            Previous
        </a>
        <a asp-action="ProductPriceIndex" asp-controller="Product"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNo="@(Model.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @nextDisabled">
            Next
        </a>
    </div>

</div>